GET aHEAD
Burpsuite is nice. Use default settings. Once it boots up, go to proxy and open browser from the Burpsuite app. Then go to the website I want to exploit. In this case it’s http://mercury.picoctf.net:21939/  . Mess around with the website a few times. Go to HTTP history and see the GET and POST history. You can manipulate this. (side note, keeping intercept mode off would be nice so you don’t get a popup from Burp constantly while going through webpages). Right click on the Raw Post request, and send to repeater. DO NOT COPY AND PASTE, BURP DOES NOT LIKE THAT. IT’LL ACT LIKE NOTHING WORKS. Change the POST to HEAD and check out the response. bam. The flag is there. You can copu

Cookies
First of all, I need to download Chrome to my linux finally. 
sudo dpkg -i google-chrome-stable_current_amd64.deb
	//after I download the Debian file from chrome ofcourse.
bam
Now go to the website pico provides. It says to type in “snickerdoodle” in the search bar. Inspect, go to application, check out cookies. The value for the one cookie working in the page is 0. That value can be edited. If you change the cookie value and refresh the page, it will change. Imagine this as different sub-domains. The flag is hiding in a certain valued webpage. Keep changing the number value to find the correct page. 

Insp3ct0r
Go to the website and inspect the page. The flag is divided into three. Look through the code. 

Bookmarklet
According to wikipedia, a bookmarklet is a piece of code that can be used as a bookmark to add new browser features. Follow the link and it'll send you to a page with bookmarklet to copy. Tried using Visual Studio Code but no luck but you can clearly see that the flag is encoded. Created a new bookmark and pasted the code into the URL. Open that "URL" and it popped a text box with the flag. 

WebDecode
You can shift through the home, about, and contact page. However, the about page says you might find the flag if youn inspect that one. Inspect the element and you'll see the HTML section right before <h1> header stating to inspect the flag. The second has an odd string that 'notify_true=". It looks base64 and you can ask ChatGPT to confirm. 
    https://www.base64decode.org/
Use the website and decode. It's only encoded by base64 once. Important to note for later I'm sure as other base64's may be encoded multiple times.



